plugins {
    id 'fabric-loom' version '1.9+'
    id 'maven-publish'
}

group = "com.github.hugman"

base {
    archivesName = project.mod_id
}

repositories {
    maven { url 'https://maven.terraformersmc.com/' } // Required for Biolith
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modApi include ("com.terraformersmc:biolith-fabric:${biolith_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

loom {
    accessWidenerPath = file("src/main/resources/promenade.accesswidener")

    splitEnvironmentSourceSets()

    mods {
        "promenade" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

fabricApi {
    configureDataGeneration() {
        modId = "promenade-datagen"
        createSourceSet = true
        client = true
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// for JitPack
configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}