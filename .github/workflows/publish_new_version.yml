name: Publish New Version
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number'
        required: true
      previousVersion:
        description: 'Last version number'
        required: true
jobs:
  build:
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create version tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ github.event.inputs.version }}",
              sha: context.sha
            })
      - name: Fetch tags
        run: git fetch --tags
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Make Gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: Build and release
        run: ./gradlew downloadTranslations generateChangelog build curseforge github modrinth --stacktrace --parallel -PlastTag="v${{ github.event.inputs.previousVersion }}" -PcurrentTag="v${{ github.event.inputs.version }}"
        env:
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_API_KEY }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Capture build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/